Setting up Docker stack
1. Initialize Swarm
docker swarm init
2. Create registry
docker service create --name registry --publish published=5000,target=5000 registry:2

Dumping Mongo Database
mongodump --archive=testdb.gz --gzip --db testdb
sudo docker cp mongo:/testdb.gz .
ssh ... testdb.gz
mongorestore --gzip --archive=testdb.gz --db testdb 
sudo k3s kubectl cp testdb.gz mongo-0:testdb.gz

curl -sfL https://get.k3s.io | sh -   
sudo chmod -R 777 /etc/rancher/k3s/k3s.yaml
/usr/local/bin/k3s-uninstall.sh

kubectl exec -it shell-demo -- /bin/bash

sudo nc -l 80

wsl -l -v

wsl --unregister docker-desktop

db.rawprices.createIndex({"instrument":1,"time":1})
db.rawprices.createIndex({"time":1})

db.session.update({id:"liveSessionRSICSharp"},{$set: {startDate: "2020-08-03"}})



db.rawprices.updateMany({},{$set: {_id:ObjectId()}})


db.rawprices.find({_id:{$regex: /Z$/}}).forEach(function(doc){var newDoc = doc; delete newDoc._id; db.rawprices.insert(newDoc); })


db.currencypairs.find().forEach(
    function(pair)
    {
        if(db.rawpricesclean.count({instrument: pair.name}) == 0)
        {
            print("hello");
            db.rawprices.find({instrument: pair.name}).forEach(function(doc){var newDoc = doc; delete newDoc._id; db.rawpricesclean.insert(newDoc); });
        }
        else
        {
            db.rawpricesclean.find({instrument: pair.name}).sort({time:-1}).limit(1).forEach
            (
                function(price)
                {
                    print(price.time);
                    db.rawprices.find({instrument: pair.name,time: {$gte: price.time} }).forEach(function(doc){var newDoc = doc; delete newDoc._id; db.rawpricesclean.insert(newDoc); })
                }
            ) 
        }      
    }
)

